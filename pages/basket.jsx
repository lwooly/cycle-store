import Head from 'next/head';
import Layout from '@/components/Layout';
import Heading from '@/components/Heading';
import {

  useUserOrTempBasket,
} from '@/lib/tq/baskets/queries';
import { Box, Button, CircularProgress, Stack } from '@mui/material';
import Paragraph from '@/components/Paragraph';
import { useUser } from '@auth0/nextjs-auth0/client';
import CartSummaryTable from '@/components/CartSummary';
import Link from 'next/link';
import StripeButton from '@/components/StripeButton';
// eslint-disable-next-line import/no-named-as-default
import QueryBoundary from '@/components/QueryBoundary';
import { useRouter } from 'next/router';

// const {AUTH0_BASE_URL} = process.env;

export default function BasketPage() {
  // check if user is logged in
  const user = useUser();

  const {
    data: basket,
    isLoading,
    isError,
    error,
  } = useUserOrTempBasket({ user });

  console.log(basket)

  // redirect users to this page after login.

  const router = useRouter();
  const currentPath = router.asPath;

  return (
    <>
      <Head>
        <title>Commerce App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Box
          sx={{
            backgroundColor: 'lightgrey',
            minHeight: '100vh',
            width: '100%',
            padding: '8rem 4rem',
          }}
        >
          <Stack
            gap={2}
            sx={{
              backgroundColor: 'white',
              padding: '3.31rem 2.5rem',
              justifyContent: 'center',
            }}
          >
            <Heading component="h1" variant="h4">
              Cart
            </Heading>
            {isLoading && <CircularProgress />}
            {isError && <Paragraph>{error.message}</Paragraph>}
            {!isLoading && !isError && basket && (
              <>
                <QueryBoundary>
                  <CartSummaryTable basket={basket} />
                </QueryBoundary>
                {!user && basket.items.length > 0 && (
                  <Button
                    component={Link}
                    href={`/api/auth/login?returnTo=${encodeURIComponent(
                      `${currentPath}`,
                    )}`}
                    variant="contained"
                    sx={{ width: '20%', marginLeft: 'auto' }}
                  >
                    Checkout
                  </Button>
                )}
                {user && basket.items.length > 0 && (
                  <Box sx={{ marginLeft: 'auto' }}>
                    {/* <QueryBoundary>
                      <StripeButton basket={basket}/>
                    </QueryBoundary> */}
                  </Box>
                )}
              </>
            )}
          </Stack>
        </Box>
      </Layout>
    </>
  );
}
