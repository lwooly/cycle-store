import Head from 'next/head';
import Layout from '@/components/Layout';
import Heading from '@/components/Heading';
import QueryBoundaries from '@/components/QueryBoundary';
import { QueryClient, dehydrate } from '@tanstack/react-query';
import BasketList from '@/components/BasketList';
import { withPageAuthRequired, getSession } from '@auth0/nextjs-auth0';
import { getUserBasketFromDB } from '@/lib/api-functions/server/baskets/queries';
import { USER_OWN_BASKET_STORAGE_KEY } from '@/lib/tq/baskets/settings';
import BasketTotal from '@/components/BasketTotal';
import { useUserBasket } from '@/lib/tq/baskets/queries';
import { CircularProgress } from '@mui/material';
import Paragraph from '@/components/Paragraph';
import { useEffect, useState } from 'react';
import { useProduct } from '@/lib/tq/products/queries';

export default function BasketPage({ user }) {
  const [basket, setBasket] = useState();
  const [tempBasketItemIds, setTempBasketItemIds] = useState(
    () =>
      JSON.parse(localStorage.getItem('temporaryBasket')) || {
        items: [],
      },
  );

  let { isLoading, isError, error, data: userBasket } = useUserBasket();


  tempBasketItemIds.map((id) => {
    const { data: product } = useProduct(id);
    console.log(product);
  });

  

  // const tempBasketFill = {
  //   items: [],
  // };

  // tempBasketItems.forEach((id) => {
  //   const { data: product } = useProduct(id);
  //   console.log(product);
  //   tempBasketFill.items.push(product);
  //   setBasket(tempBasketFill);
  // });

  // console.log(basket, 'basket');

  return (
    <>
      <Head>
        <title>Commerce App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Heading component="h2">Basket</Heading>
        <QueryBoundaries>
          <BasketTotal basket={basket} />
        </QueryBoundaries>
        <QueryBoundaries>{/* <BasketList /> */}</QueryBoundaries>
      </Layout>
    </>
  );
}

export const getServerSideProps = async (context) => {
  // get user data from auth0
  const session = await getSession(context.req, context.res);

  console.log(session?.user, 'user');

  let userBasket = null;
  if (session?.user) {
    userBasket = await getUserBasketFromDB(session.user.sub, true);
  }

  const queryClient = new QueryClient();

  if (userBasket) {
    await queryClient.setQueryData([USER_OWN_BASKET_STORAGE_KEY], userBasket);
  }

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
      user: session?.user || null,
    },
  };
};
